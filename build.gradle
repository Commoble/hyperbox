plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.neoforged.gradle.userdev' version "7.0.+"
}

version = "${mod_version}"
group = "net.commoble.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
base {
	archivesName = "${modid}-${mc_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
jarJar.enable()

sourceSets {
	main
}

runs {
	configureEach {
		systemProperty 'forge.logging.console.level', 'debug'
		modSource project.sourceSets.main
	}

	client {
		// Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
		systemProperty 'forge.enabledGameTestNamespaces', project.modid
	}

	server {
		systemProperty 'forge.enabledGameTestNamespaces', project.modid
	}
	
	gameTestServer {
		systemProperty 'forge.enabledGameTestNamespaces', project.modid
	}

	data {
		programArguments.addAll '--mod', project.modid, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
	}
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

minecraft {
  accessTransformers {
    file('src/main/resources/META-INF/accesstransformer.cfg')
  }
}

repositories {
	mavenCentral()
	maven {url = "https://maven.blamejared.com/"}
	maven {url = "https://dvs1.progwml6.com/files/maven/"}
	maven {url = "https://modmaven.dev"}
	maven {url = "https://cursemaven.com"}
	maven {url = "https://commoble.net/maven/"}
}

dependencies {
	implementation "net.neoforged:neoforge:${neo_version}"

	implementation "net.commoble.infiniverse:${infiniverse_mc_version}:${infiniverse_version}"
	jarJar(group: "net.commoble.infiniverse", name: "${infiniverse_mc_version}", version: "[${infiniverse_min_version}, ${infiniverse_max_version})")
}

tasks.jarJar.configure {
    archiveClassifier = ''
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
	archiveClassifier = 'slim'
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "Commoble",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Commoble",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.build.dependsOn tasks.jarJar

// run "gradlew build publish" to build jars and generate a maven repo for them
// run "gradlew build" to build the jars without mavening them
publishing {
    publications {
        mavenJava(MavenPublication) {
			artifactId project.archivesBaseName
            artifact tasks.jarJar
			//artifact sourcesJar
			//artifact javadocJar
        }
    }
    repositories {
        maven {
			name="localMaven"
            url "file:///${project.projectDir}/maven"
        }
    }
}
